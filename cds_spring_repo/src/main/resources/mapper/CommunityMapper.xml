<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.cds.mapper.CommunityMapper">

    <!-- 커뮤니티 게시물 목록 조회 -->
    <select id="getCommunityList" resultType="CommunityVO">
        SELECT c.c_idx, c.memberId, c.title, c.content, c.location, c.comments, 
               c.tag, c.created_at, c.updated_at, GROUP_CONCAT(ip.imagePath) AS imagePaths
        FROM community c 
        LEFT JOIN image_paths ip ON c.c_idx = ip.postId
        GROUP BY c.c_idx
        ORDER BY c.created_at DESC
    </select>
    
    <select id="getImagePathList" parameterType="_int" resultType="com.human.cds.vo.CommunityImgVO">
    	select * from image_paths
    		where postId = #{idx}
    </select>
    
    <select id="getCommunity" parameterType="_int" resultType="CommunityVO">
    	select * from community
    		where c_idx = #{id}
    </select>

    <!-- 게시물 상세 조회 -->
    <select id="getPostById" parameterType="int" resultType="CommunityVO">
        SELECT c.c_idx AS id, c.memberId, c.title, c.content, c.location, c.comments, 
               c.tag, c.created_at, c.updated_at, GROUP_CONCAT(ip.imagePath) AS imagePaths
        FROM community c
        LEFT JOIN image_paths ip ON c.c_idx = ip.postId
        WHERE c.c_idx = #{id}
        GROUP BY c.c_idx
    </select>

    <!-- 게시물 삽입 -->
    <insert id="insertPost" parameterType="CommunityVO">
        INSERT INTO community (memberId, title, content, location, tag)
        VALUES (#{memberId}, #{title}, #{content}, #{location}, #{tag})
    </insert>
    
    <select id="getCommunityCount" resultType="_int">
    	select max(c_idx) from community
    </select>
    
    <insert id="insertImg" parameterType="com.human.cds.vo.CommunityImgVO">
    	insert into image_paths (postId, imagePath)
    		values(#{postId}, #{imagePath})
    </insert>
    
     <!-- 지역별 게시물 조회 -->
    <select id="getLocationList" resultType="CommunityVO">
    	select * from community
    		where location = #{location}
    </select>
    
    <!-- 최신/평점순 +지역별 게시물 조회 -->
    <!-- 최신순 지역별 조회 -->
	<select id="getlatestarea" parameterType="java.util.Map" resultType="CommunityVO">
	    SELECT * FROM Community
	    WHERE location = #{area}
	    ORDER BY created_at DESC
	</select>
	
	<!-- 평점순 지역별 조회 -->
	<select id="getratingarea" parameterType="java.util.Map" resultType="CommunityVO">
	    SELECT * FROM Community
	    WHERE location = #{area}
	    ORDER BY rating DESC
	</select>
	
	<!-- 최신순 전체 조회 -->
	<select id="getlatest" parameterType="java.util.Map" resultType="CommunityVO">
	    SELECT * FROM Community
	    ORDER BY created_at DESC
	</select>
	
	<!-- 평점순 전체 조회 -->
	<select id="getrating" parameterType="java.util.Map" resultType="CommunityVO">
	    SELECT * FROM Community
	    ORDER BY rating DESC
	</select>
	
	<!-- 검색어로(제목, id)로 게시물 조회-->
	<select id="getSeachList" resultType="CommunityVO">
		select * From community
		where memberId like concat ('%', #{search}, '%') or
				title like concat ('%', #{search}, '%')
	</select>
	
	
	
	
	
	
	<!--아직 안슨거  -->
    <!-- 게시물 수정 -->
    <update id="updatePost" parameterType="CommunityVO">
        UPDATE community
        SET title = #{title},
            content = #{content},
            location = #{location},
            tag = #{tag},
            updated_at = NOW()
        WHERE c_idx = #{id}
    </update>

    <!-- 게시물 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM community
        WHERE c_idx = #{id}
    </delete>

    <!-- 좋아요 증가 -->
    <update id="incrementLikes" parameterType="int">
        UPDATE community
        SET likes = likes + 1
        WHERE c_idx = #{id}
    </update>

    <!-- 댓글 수 증가 -->
    <update id="incrementComments" parameterType="int">
        UPDATE community
        SET comments = comments + 1
        WHERE c_idx = #{id}
    </update>

    <!-- 이미지 경로 삽입 -->
    <insert id="insertImagePath" parameterType="map">
        INSERT INTO image_paths (postId, imagePath)
        VALUES (#{postId}, #{fileName})
    </insert>

    <!-- 댓글 삽입 -->
    <insert id="insertComment" parameterType="CommunityVO">
        INSERT INTO community_comments (c_idx, memberId, content, created_at)
        VALUES (#{articleId}, #{memberId}, #{content}, NOW())
    </insert>

    <!-- 댓글 목록 조회 -->
    <select id="getCommentsByArticleId" parameterType="map" resultType="CommunityVO">
        SELECT comment_id AS id, memberId, content, created_at
        FROM community_comments
        WHERE c_idx = #{articleId}
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        DELETE FROM community_comments WHERE comment_id = #{id}
    </delete>

    <!-- 댓글 수 조회 -->
    <select id="countCommentsByArticleId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM community_comments WHERE c_idx = #{articleId}
    </select>

</mapper>
