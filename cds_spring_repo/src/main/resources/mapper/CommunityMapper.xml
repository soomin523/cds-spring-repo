<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.cds.mapper.CommunityMapper">

    <!-- 커뮤니티 게시물 목록 조회 -->
    <select id="getCommunityList" resultType="CommunityVO">
        SELECT *
        FROM community
        ORDER BY created_at DESC
    </select>

    <select id="getImagePathList" parameterType="_int" resultType="CommunityImgVO">
        SELECT * 
        FROM image_paths
        WHERE postId = #{idx}  <!-- postId를 c_idx로 변경 -->
    </select>

    <select id="getCommunity" parameterType="_int"
        resultType="CommunityVO">
        SELECT * FROM community
        WHERE c_idx = #{idx}
    </select>

    <!-- 댓글 목록 조회 -->
    <select id="getCommentsByArticleId" parameterType="_int"
        resultType="com.human.cds.vo.CommunityContentVO">
        SELECT comment_id, c_idx, memberId, content, created_at
        FROM community_comments
        WHERE c_idx = #{idx}
    </select>

    <!-- 댓글 수 조회 -->
    <select id="getCommentCount" parameterType="int"
        resultType="int">
        SELECT COUNT(*) FROM community_comments WHERE c_idx = #{idx}
    </select>

    <!-- 좋아요 수 조회 -->
    <select id="getLikeCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM community_likes WHERE c_idx = #{idx}
    </select>

    <!-- 게시물 삽입 -->
    <insert id="insertPost" parameterType="CommunityVO">
        INSERT INTO community (memberId, title, content, location, tag, rating)
        VALUES (#{memberId}, #{title}, #{content}, #{location}, #{tag}, #{rating})
    </insert>

    <select id="getCIdx" resultType="_int">
        SELECT MAX(c_idx) FROM community
    </select>

    <insert id="insertImg" parameterType="CommunityImgVO">
        INSERT INTO image_paths (postId, origin_filename, save_filename)  <!-- postId를 c_idx로 변경 -->
        VALUES (#{postId}, #{origin_filename}, #{save_filename})  <!-- imagePath가 save_filename으로 변경 -->
    </insert>

    <!-- 지역별 게시물 조회 -->
    <select id="getLocationList" resultType="CommunityVO">
        SELECT * FROM community
        WHERE location = #{location}
    </select>

    <!-- 최신/평점순 + 지역별 게시물 조회 -->
    <!-- 최신순 지역별 조회 -->
    <select id="getlatestarea" parameterType="java.util.Map"
        resultType="CommunityVO">
        SELECT * FROM community
        WHERE location = #{area}
        ORDER BY created_at DESC
    </select>

    <!-- 평점순 지역별 조회 -->
    <select id="getratingarea" parameterType="java.util.Map"
        resultType="CommunityVO">
        SELECT * FROM community
        WHERE location = #{area}
        ORDER BY rating DESC
    </select>

    <!-- 최신순 전체 조회 -->
    <select id="getlatest" parameterType="java.util.Map"
        resultType="CommunityVO">
        SELECT * FROM community
        ORDER BY created_at DESC
    </select>

    <!-- 평점순 전체 조회 -->
    <select id="getrating" parameterType="java.util.Map"
        resultType="CommunityVO">
        SELECT * FROM community
        ORDER BY rating DESC
    </select>

    <!-- 검색어로(제목, id)로 게시물 조회 -->
    <select id="getSearchList" resultType="CommunityVO">
        SELECT * FROM community
        WHERE memberId LIKE CONCAT ('%', #{search}, '%') OR
        title LIKE CONCAT ('%', #{search}, '%')
    </select>

    <!-- 댓글 삽입 -->
    <insert id="insertComment" parameterType="map">
        INSERT INTO community_comments (c_idx, memberId, content)
        VALUES (#{c_idx}, #{memberId}, #{content})
    </insert>

    <!-- 댓글 삽입 후 화면에 띄우기 위함 -->
    <select id="getComment"
        resultType="com.human.cds.vo.CommunityContentVO">
        SELECT * FROM community_comments
        ORDER BY comment_id DESC
        LIMIT 1
    </select>

    <!-- 좋아요 삽입 -->
    <insert id="insertLike" parameterType="map">
        INSERT INTO community_likes (c_idx, memberId)
        VALUES (#{c_idx}, #{memberId})
    </insert>

    <!-- 좋아요 이미 있는지 검사 -->
    <select id="likeDouble" parameterType="map" resultType="_int">
        SELECT COUNT(*) FROM community_likes
        WHERE c_idx = #{c_idx} AND memberId = #{memberId}
    </select>

    <!-- 좋아요 삭제 -->
    <delete id="deleteLike" parameterType="map">
        DELETE FROM community_likes
        WHERE c_idx = #{c_idx} AND memberId = #{memberId}
    </delete>

    <!-- 게시물 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM community
        WHERE c_idx = #{idx}
    </delete>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        DELETE FROM community_comments
        WHERE comment_id = #{comment_id}
    </delete>

    <!-- 게시물 수정 -->
    <update id="updatePost" parameterType="CommunityVO">
        UPDATE community
        SET title = #{title},
            content = #{content},
            location = #{location},
            tag = #{tag},
            rating = #{rating}
        WHERE c_idx = #{c_idx}
    </update>

</mapper>
