<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.cds.mapper.CommunityMapper">

    <!-- 커뮤니티 게시물 목록 조회 -->
    <select id="getCommunityList" resultType="CommunityVO">
        SELECT c.c_idx AS id, c.memberId, c.title, c.content, c.location, c.likes, c.comments, 
       		c.tag, c.created_at, c.updated_at, ip.imagePath 
        	FROM community c join image_paths ip
       		ON c.c_idx = ip.postId
        	ORDER BY c.created_at desc
    </select>

    <!-- 게시물 상세 조회 -->
    <select id="getPostById" parameterType="int" resultType="CommunityVO">
        SELECT c_idx AS id, memberId, title, content, location, likes, comments, tag, created_at, updated_at
        FROM community
        WHERE c_idx = #{id}
    </select>

    <!-- 게시물 삽입 -->
    <insert id="insertPost" parameterType="CommunityVO">
        INSERT INTO community (memberId, title, content, location, tag, created_at, updated_at)
        VALUES (#{memberId}, #{title}, #{content}, #{location}, #{tag}, NOW(), NOW())
    </insert>

    <!-- 게시물 수정 -->
    <update id="updatePost" parameterType="CommunityVO">
        UPDATE community
        SET title = #{title},
            content = #{content},
            location = #{location},
            tag = #{tag},
            updated_at = NOW()
        WHERE c_idx = #{id}
    </update>

    <!-- 게시물 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM community
        WHERE c_idx = #{id}
    </delete>

    <!-- 좋아요 증가 -->
    <update id="incrementLikes" parameterType="int">
        UPDATE community
        SET likes = likes + 1
        WHERE c_idx = #{id}
    </update>

    <!-- 댓글 수 증가 -->
    <update id="incrementComments" parameterType="int">
        UPDATE community
        SET comments = comments + 1
        WHERE c_idx = #{id}
    </update>

    <!-- 이미지 경로 삽입 -->
    <insert id="insertImagePath" parameterType="map">
        INSERT INTO image_paths (postId, imagePath)
        VALUES (#{postId}, #{fileName})
    </insert>

    <!-- 댓글 삽입 -->
    <insert id="insertComment" parameterType="CommunityVO">
        INSERT INTO comments (articleId, memberId, comments, created_at)
        VALUES (#{articleId}, #{memberId}, #{comments}, NOW())
    </insert>

    <!-- 댓글 목록 조회 -->
    <select id="getCommentsByArticleId" parameterType="map" resultType="CommunityVO">
        SELECT id, memberId, comments, created_at
        FROM comments
        WHERE articleId = #{articleId}
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="String">
        DELETE FROM comments WHERE id = #{articleId}
    </delete>

    <!-- 댓글 수 조회 -->
    <select id="countCommentsByArticleId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM comments WHERE articleId = #{articleId}
    </select>

</mapper>
